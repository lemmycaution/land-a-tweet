window.LAT = (function () { 
  var origin = '<%= ActionController::Base.asset_host %>'
  var frame
  var callbacks = {}

  function LAT (options) {
    options = options || {}
    if (options.frame) {
      frame = options.frame
    } else {
      frame = document.body.appendChild(document.createElement('IFRAME')) 
      frame.src = options.src
    }
    if (!options.skipStyles) {
      frame.style.width = "100%"
      this.addEventListener('ready', function () {
        this.api({method: 'getHeight', callback: function (height) {
          console.log(height)
          frame.style.height = height + 'px'
        }})
      }.bind(this))
      frame.setAttribute('scrolling', 'no')
      frame.setAttribute('frameborder', 'no')
    }
    window.addEventListener("message", this.onMessage.bind(this))
  }

  LAT.prototype.onMessage = function (event) {
    if (event.origin !== origin) return
    var action = event.data
    if (action.method === 'event') {
      frame.dispatchEvent(new Event('ready'))
    } else if (typeof callbacks[action.method] === 'function') {
      callbacks[action.method](action.data)
      delete callbacks[action.method]
    }
  }

  LAT.prototype.addEventListener = function () {
    frame.addEventListener.apply(frame, arguments)
  }

  LAT.prototype.removeEventListener = function () {
    frame.removeEventListener.apply(frame, arguments)
  }

  LAT.prototype.api = function (params) {
    callbacks[params.method] = params.callback
    delete params.callback
    frame.contentWindow.postMessage(params, origin)
  }

  return LAT
})()